buildNumber: 0.0.0
name: Github For Jira
description: Connect app for integrating GitHub into Jira
organization: Engineering-DevOps
notifications:
  email: fusion-arc@atlassian.com

compose:
  microservice:
    image: ${DOCKER_IMAGE_NAME}
    tag: ${DOCKER_IMAGE_TAG}
    ports:
      - 8080:8080

computeClassification:
  dataType:
    - UGC/Label                # name of GitHub org / Jira site
    - PII/IndirectConfidential # name of GitHub org
    - UGC/Configuration        # data about the installation of the GitHub app into Jira sites
    - Security/Secret          # shared Connect secret
    - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues
    - UGC/Primary              # GitHub entities (non-persistent) like commits, pull requests, etc.

links:
  healthcheck:
    uri: healthcheck
  deepcheck:
    uri: deepcheck
  source:
    url: git@bitbucket.org:atlassian/github-jira-integration.git

cleanup: true

resources:
  - type: redis
    name: bottleneck
    attributes:
      snapshotRetention: 0
      config:
        maxmemory-policy: allkeys-lru
      dataType:
        - UGC/Label                # name of GitHub org / Jira site
        - PII/IndirectConfidential # name of GitHub org
        - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues

  - name: rds
    type: dedicated-rds
    attributes:
      dataType:
        - UGC/Label                # name of GitHub org / Jira site
        - PII/IndirectConfidential # name of GitHub org
      parameters:
        DBType: postgres125

  - name: database
    type: postgres-db
    attributes:
      dataType:
        - UGC/Label                # name of GitHub org / Jira site
        - PII/IndirectConfidential # name of GitHub org
        - UGC/Configuration        # data about the installation of the GitHub app into Jira sites
        - Security/Secret          # shared Connect secret
      dedicatedRds:
        # Name of the service that owns the RDS
        service: github-for-jira
        # Name of the RDS resource from above
        resource: rds

  - type: globaledge
    name: ingress
    attributes:
      ip_whitelist:
        - public

scaling:
  instance: t2.small
  min: 1
  max: 5
  metrics: &CpuMemScalingRules
    complexScalingRule:
      EvaluationPeriods: 3
      Threshold:
        Lower: 30
        Upper: 85
      Metrics:
        - Expression: "MAX([cpuUsage, memoryUsage])"
          Id: "combinedCpuRam"
          Label: "Scaling based on CPU and Memory consumption"
        - MetricStat:
            Metric:
              # Dimensions can be ignored here due to defaulting
              MetricName: CPUUtilization
              Namespace: AWS/EC2
            Period: 60
            Stat: Average
          Id: cpuUsage
          ReturnData: false
        - MetricStat:
            Metric:
              # Dimensions can be ignored here due to defaulting
              MetricName: MemoryUtilization
              Namespace: System/Linux
            Period: 60
            Stat: Average
          Id: memoryUsage
          ReturnData: false

tags:
  brahmos: enabled

alarms:
  overrides:
    MemoryConsumptionAlert:
      Namespace: System/Linux
      MetricName: MemoryUtilization
      Description: "Memory utilization is more than 90%"
      Threshold: 90
      Priority: Low
      EvaluationPeriods: 5
      Period: 120
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average


config:
  environmentVariables:
    NODE_ENV: production
    NODE_OPTIONS: "--no-deprecation"
    LOG_LEVEL: info
    PORT: "8080"
    # These secret environment variables need to be stashed with "atlas micros stash" for each environment:
    # GITHUB_CLIENT_SECRET: GitHub app's client secret
    # PRIVATE_KEY: contents of your (*.pem) generated in the GitHub app
    # STORAGE_SECRET: secret generated by running openssl rand -hex 32
    # SENTRY_DSN: client key required to connect to Sentry
    # WEBHOOK_SECRET: the webhook secret configured in the GitHub app

workers:
  - name: Worker
    scaling:
      instance: t2.small
      min: 1
      max: 5
      #TODO Replace with queue size metrics when we switch to SQS
      metrics: *CpuMemScalingRules



environmentOverrides:
  ddev:
    loadBalancer:
      type: ELB # needed for remote debugging, default is "ALB"
    compose:
      microservice:
        ports:
          - 8080:8080
          - 5005:5005 # remote debugging port (has to be 5005 because that is hard coded into Micros)
    links:
      remoteDebug: true
    config:
      environmentVariables:
        APP_URL: https://github-for-jira.dev.services.atlassian.com
        WEBHOOK_PROXY_URL: https://github-for-jira.dev.services.atlassian.com/github/events
        INSTANCE_NAME: github-for-jira-dev
        NODE_OPTIONS: "--no-deprecation"
        LOG_LEVEL: debug
        SENTRY_ENVIRONMENT: ddev
        APP_ID: '124403'
        GITHUB_CLIENT_ID: Iv1.600bf90a20f1ab18
    scaling:
      instance: t2.small
      min: 1
      max: 5
      metrics: *CpuMemScalingRules
    workers:
      - name: Worker
        scaling:
          instance: t2.small
          min: 1
          max: 5
          metrics: *CpuMemScalingRules

  staging:
    config:
      environmentVariables:
        APP_URL: https://github.stg.atlassian.com
        WEBHOOK_PROXY_URL: https://github.stg.atlassian.com/github/events
        INSTANCE_NAME: github-for-jira-stg
        SENTRY_ENVIRONMENT: stg-west
        APP_ID: '12645'
        GITHUB_CLIENT_ID: Iv1.2d8e2a184a746aec
    scaling:
      instance: t3.medium
      min: 1
      max: 5
      metrics: &CpuMemAlbScalingRules
        complexScalingRule:
          EvaluationPeriods: 3
          Threshold:
            Lower: 30
            Upper: 85
          Metrics:
            - Expression: "MAX([(responseTime/3)*100, cpuUsage, memoryUsage])"
              Id: "combinedCpuRamAndLatency"
              Label: "Scaling based on CPU and Memory consumption or response time"
            - MetricStat:
                Metric:
                  MetricName: CPUUtilization
                  Namespace: AWS/EC2
                Period: 60
                Stat: Average
              Id: cpuUsage
              ReturnData: false
            - MetricStat:
                Metric:
                  MetricName: MemoryUtilization
                  Namespace: System/Linux
                Period: 60
                Stat: Average
              Id: memoryUsage
              ReturnData: false
            - MetricStat:
                Metric:
                  Dimensions:
                    - Name: LoadBalancer
                      Value: { "Fn::GetAtt": [ "ALB", "LoadBalancerFullName" ] }
                    - Name: TargetGroup
                      Value: { "Fn::GetAtt": [ "ALBTargetGroup", "TargetGroupFullName" ] }
                  MetricName: TargetResponseTime
                  Namespace: AWS/ApplicationELB
                Period: 60
                Stat: Average
              Id: responseTime
              ReturnData: false
    alarms:
      overrides:
        ElbResponseTimeAlert:
          Namespace: AWS/ApplicationELB
          MetricName: TargetResponseTime
          Description: "Response latency is too high"
          Dimensions:
            - Name: LoadBalancer
              Value: { "Fn::GetAtt": [ "ALB", "LoadBalancerFullName" ] }
            - Name: TargetGroup
              Value: { "Fn::GetAtt": [ "ALBTargetGroup", "TargetGroupFullName" ] }
          Threshold: 3
          Priority: Low
          EvaluationPeriods: 3
          Period: 60
          ComparisonOperator: GreaterThanThreshold
          Statistic: Average
    workers:
      - name: Worker
        scaling:
          instance: t3.medium
          min: 1
          max: 5
          metrics: *CpuMemScalingRules
    resources:
      - type: globaledge
        name: proxy
        attributes:
          default_vanity_dns: false
          domain:
            - github.stg.atlassian.com
          upstream_address:
            - address: jira-integration-staging.herokuapp.com
          rewrite: jira-integration-staging.herokuapp.com
          ip_whitelist:
            - public

  prod:
    config:
      environmentVariables:
        APP_URL:  https://github.atlassian.com
        WEBHOOK_PROXY_URL:  https://github.atlassian.com/github/events
        INSTANCE_NAME: github-for-jira-production
        SENTRY_ENVIRONMENT: production
        APP_ID: '125082'
        GITHUB_CLIENT_ID: Iv1.234a3f06f2b64fbe
    scaling:
      instance: t3.medium #bump to c5.2xlarge before the migration
      min: 5
      max: 10
      metrics: *CpuMemAlbScalingRules
    workers:
      - name: Worker
        scaling:
          instance: t3.medium #bump to c5.2xlarge before the migration
          min: 3
          max: 10
          metrics: *CpuMemScalingRules
    alarms:
      overrides:
        ElbResponseTimeAlert:
          Namespace: AWS/ApplicationELB
          MetricName: TargetResponseTime
          Description: "Response latency is too high"
          Dimensions:
            - Name: LoadBalancer
              Value: { "Fn::GetAtt": [ "ALB", "LoadBalancerFullName" ] }
            - Name: TargetGroup
              Value: { "Fn::GetAtt": [ "ALBTargetGroup", "TargetGroupFullName" ] }
          Threshold: 3
          Priority: Low
          EvaluationPeriods: 5
          Period: 120
          ComparisonOperator: GreaterThanThreshold
          Statistic: Average
    resources:
      - name: rds
        type: dedicated-rds
        attributes:
          parameters:
            DBInstanceClass: db.t3.large

      - type: globaledge
        name: proxy
        attributes:
          default_vanity_dns: false
          domain:
            - github.atlassian.com
          upstream_address:
            - address: jira-integration-production.herokuapp.com
          rewrite: jira-integration-production.herokuapp.com
          ip_whitelist:
            - public
